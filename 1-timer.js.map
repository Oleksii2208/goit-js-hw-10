{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  inputPicker: document.querySelector('#datetime-picker'),\n  elemDays: document.querySelector('[data-days]'),\n  elemHours: document.querySelector('[data-hours]'),\n  elemMinutes: document.querySelector('[data-minutes]'),\n  elemSeconds: document.querySelector('[data-seconds]'),\n};\n\nlet timerId = null;\nlet selectedDate = null;\n\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      return iziToast.error({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      selectedDate = selectedDates[0];\n      refs.startBtn.removeAttribute('disabled');\n    }\n    console.log(selectedDates[0]);\n  },\n};\n\nflatpickr(refs.inputPicker, options);\n\nfunction createTimer() {\n  timerId = setInterval(updateTimer, 1000);\n  refs.startBtn.setAttribute('disabled', true);\n  refs.inputPicker.setAttribute('disabled', true);\n}\nrefs.startBtn.addEventListener('click', createTimer);\n\nfunction updateTimer() {\n  const time = selectedDate - new Date();\n  const { days, hours, minutes, seconds } = convertMs(time);\n  refs.elemDays.textContent = addLeadingZero(days);\n  refs.elemHours.textContent = addLeadingZero(hours);\n  refs.elemMinutes.textContent = addLeadingZero(minutes);\n  refs.elemSeconds.textContent = addLeadingZero(seconds);\n  if (time < 1000) {\n    clearInterval(timerId);\n    refs.inputPicker.removeAttribute('disabled');\n  }\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","timerId","selectedDate","options","selectedDates","iziToast","flatpickr","createTimer","updateTimer","time","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"0IAKA,MAAMA,EAAO,CACX,SAAU,SAAS,cAAc,cAAc,EAC/C,YAAa,SAAS,cAAc,kBAAkB,EACtD,SAAU,SAAS,cAAc,aAAa,EAC9C,UAAW,SAAS,cAAc,cAAc,EAChD,YAAa,SAAS,cAAc,gBAAgB,EACpD,YAAa,SAAS,cAAc,gBAAgB,CACtD,EAEA,IAAIC,EAAU,KACVC,EAAe,KAEnBF,EAAK,SAAS,SAAW,GAEzB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAI,IAAI,KACzB,OAAOC,EAAS,MAAM,CACpB,SAAU,WACV,QAAS,oCACjB,CAAO,EAEDH,EAAeE,EAAc,CAAC,EAC9BJ,EAAK,SAAS,gBAAgB,UAAU,EAE1C,QAAQ,IAAII,EAAc,CAAC,CAAC,CAC7B,CACH,EAEAE,EAAUN,EAAK,YAAaG,CAAO,EAEnC,SAASI,GAAc,CACrBN,EAAU,YAAYO,EAAa,GAAI,EACvCR,EAAK,SAAS,aAAa,WAAY,EAAI,EAC3CA,EAAK,YAAY,aAAa,WAAY,EAAI,CAChD,CACAA,EAAK,SAAS,iBAAiB,QAASO,CAAW,EAEnD,SAASC,GAAc,CACrB,MAAMC,EAAOP,EAAe,IAAI,KAC1B,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDT,EAAK,SAAS,YAAce,EAAeL,CAAI,EAC/CV,EAAK,UAAU,YAAce,EAAeJ,CAAK,EACjDX,EAAK,YAAY,YAAce,EAAeH,CAAO,EACrDZ,EAAK,YAAY,YAAce,EAAeF,CAAO,EACjDJ,EAAO,MACT,cAAcR,CAAO,EACrBD,EAAK,YAAY,gBAAgB,UAAU,EAE/C,CAEA,SAASe,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACpC,CAEA,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}